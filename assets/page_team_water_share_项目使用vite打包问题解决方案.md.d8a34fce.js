import{_ as a,J as n,o as l,c as p,N as o,V as e}from"./chunks/framework.c4e3e1ab.js";const u=JSON.parse('{"title":"什么是Vite","description":"","frontmatter":{},"headers":[],"relativePath":"page/team/water/share/项目使用vite打包问题解决方案.md","filePath":"page/team/water/share/项目使用vite打包问题解决方案.md","lastUpdated":1703129674000}'),t={name:"page/team/water/share/项目使用vite打包问题解决方案.md"},c=e(`<h1 id="什么是vite" tabindex="-1">什么是Vite <a class="header-anchor" href="#什么是vite" aria-label="Permalink to &quot;什么是Vite&quot;">​</a></h1><p>Vite 是 vue 的作者尤雨溪在开发 vue3.0 的时候开发的一个 基于原生 ES-Module 的前端构建工具。其作为一个基于浏览器原生ESM的构建工具，它省略了开发环境的打包过程，利用浏览器去解析imports，在服务端按需编译返回。同时，在开发环境拥有速度快到惊人的模块热更新，且热更新的速度不会随着模块增多而变慢。因此，使用Vite进行开发，至少会比Webpack快10倍左右。 <strong>以下开始对于黄岩项目内遇到的各种vite打包部署线上出现的问题以及解决方案进行介绍：</strong></p><h1 id="_1-vite打包图片丢失问题" tabindex="-1">1. Vite打包图片丢失问题 <a class="header-anchor" href="#_1-vite打包图片丢失问题" aria-label="Permalink to &quot;1.  Vite打包图片丢失问题&quot;">​</a></h1><p>我们一般采取vite模块化导入工具i<wbr>mport.meta.globEager和i<wbr>mport.meta.glob来模块化导入图片，js文件等等，其可以实现对于路由，api的模块化封装。globEager是直接引入，而glob是动态引入，其会生产一个() =&gt; import(&quot;**&quot;)对象，调用对应属性时才会按需引入。以下的使用是导入mapStyle文件夹下所有的以.svg结尾的文件：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> imgsGlob </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">meta</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">globEager</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.../assets/map/mapStyle/*.svg</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>当配置了vite的resolve引入后</p><p><img src="https://img-blog.csdnimg.cn/5be4893f81ba4058905cb06fe7fc9a62.png" alt="在这里插入图片描述"></p><p>我们通常有以下三种导入路径写法</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">../assets/map/mapStyle/*.svg</span></span>
<span class="line"><span style="color:#A6ACCD;">/src/assets/map/mapStyle/*.svg</span></span>
<span class="line"><span style="color:#A6ACCD;">@/assets/map/mapStyle/*.svg （此方法是无效的）</span></span></code></pre></div><p>以上写法除了第三种在开发环境就无效外，前两种写法在开发环境手动运行build打包时都不会出现问题，但是在线上CI打包时部分第二种根路径获取方法只会获得空而且不会报错，所以要采取第一种相对路径导入文件比较保险。</p><p>有一个值得忽视的问题是线下模块导入时<strong>vite对于路径中地址的大小写不敏感</strong>，也就是当识别到mapStyle文件夹不存在的时候其可以模块导入mapstyle，Mapstyle等等文件夹下的svg文件，还有就是在导入图片的时候如果路径上多了一个‘/’符号在本地也是可以正常运行，此问题在开发环境手动打包时也不会有问题，但是在线上CI环境打包时会更加严格，不会识别不同小大写字母的文件夹，包括多余的‘/’，会直接返回空的对象且不会有任何的报错，这很容易在排查的时候无法准确定位问题原因，所以这点要非常注意。</p><h1 id="_2-vite关于使用问题echarts问题" tabindex="-1">2. Vite关于使用问题Echarts问题 <a class="header-anchor" href="#_2-vite关于使用问题echarts问题" aria-label="Permalink to &quot;2. Vite关于使用问题Echarts问题&quot;">​</a></h1><h2 id="_2-1-引入问题" tabindex="-1">2.1 引入问题 <a class="header-anchor" href="#_2-1-引入问题" aria-label="Permalink to &quot;2.1 引入问题&quot;">​</a></h2><p>在vue内我们一般推荐使用以下方式引入并使用</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> echarts </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">echarts</span><span style="color:#89DDFF;">&#39;</span></span></code></pre></div><p>但是在制作echarts和mapbox结合的效果时也就是使用glMap时此方式在Vite打包后会无法显示（开发环境可以），所以使用在此类场景使用echarts时要使用以下方式导入</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> echarts </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">echarts</span><span style="color:#89DDFF;">&#39;</span></span></code></pre></div><h2 id="_2-2-获取dom问题" tabindex="-1">2.2 获取dom问题 <a class="header-anchor" href="#_2-2-获取dom问题" aria-label="Permalink to &quot;2.2 获取dom问题&quot;">​</a></h2><p>Echarts获取dom时我们有时候会采用document.getElementByclassName()方法来获取一个或多个echarts的dom节点，在开发环境手动打包生成镜像部署后是没什么问题。但是这存在隐患，如果之前的class的dom节点没有销毁会无法获取指定元素。</p><p>在线上CI打包时，用class类名获取节点会出现第一次打开页面可以获得dom节点生成echarts图表，但是在第二次打开同样组件时就算之前已经销毁改组件，class类名没有重复，但是还是无法获取到该节点，echarts无法正常生成，且不会报错，线上存在vite+vue3的兼容性问题，推荐使用vue3的ref获取节点获取方法：</p><p>1.直接引用</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">echarts-box</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">ref</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">echartsPie</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">setup内：</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> echartsPie </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">使用：</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> chartOne </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> echarts</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">init</span><span style="color:#A6ACCD;">(echartsPie</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value)</span></span>
<span class="line"><span style="color:#A6ACCD;">chartOne</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setOption</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">getChartOption</span><span style="color:#A6ACCD;">())</span></span></code></pre></div><p>2.toRefs模块绑定响应式引用</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">setup内</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> data </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">reactive</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">echartsPie</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> echartsPie </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">toRefs</span><span style="color:#A6ACCD;">(data)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">使用：</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> chartOne </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> echarts</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">init</span><span style="color:#A6ACCD;">(data</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">echartsPie)</span></span>
<span class="line"><span style="color:#A6ACCD;">chartOne</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setOption</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">getChartOption</span><span style="color:#A6ACCD;">())</span></span></code></pre></div><p>3.for循环获取多个dom</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ch-dom</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(item, key) in [0, 1, 2, 3]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> :key=&quot;key&quot; :ref=&quot;el =&gt; star[key] = el&quot;&gt;&lt;/div&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">setup:</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#89DDFF;"> star: HTMLElement[] = reactive([])</span></span></code></pre></div><h1 id="_3-turf使用问题" tabindex="-1">3. turf使用问题 <a class="header-anchor" href="#_3-turf使用问题" aria-label="Permalink to &quot;3. turf使用问题&quot;">​</a></h1><p>在Vue3+Vite内使用turf时我们的导入方式一般是采用</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> turf </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@turf/turf</span><span style="color:#89DDFF;">&#39;</span></span></code></pre></div><p>在使用turf方法时，开发环境不会有什么问题，但是在vite打包后线上环境会导致整个页面白屏，就算代码内一开始并不会调用此方法的相关文件，需要点击特殊组件才会调用，但是还是会导致页面一打开就白屏。打开控制台显示如下错误：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">TypeError</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Cannot read properties </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;"> (reading </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">default</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>点击定位代码位置后会发现是关于turf的问题</p><p><img src="https://img-blog.csdnimg.cn/5b82f7251cfa45e3b87841771d4e7b15.png" alt="在这里插入图片描述"></p><p>尝试其他方式import turf和定位到turf部分方法使用报错，但是始终无法解决，最后采用html页面直接导入turf.js文件代替后不会出现此问题</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/javascript</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/public/static/turf.min.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h1 id="_4-vite打包警告过多问题" tabindex="-1">4. Vite打包警告过多问题 <a class="header-anchor" href="#_4-vite打包警告过多问题" aria-label="Permalink to &quot;4. Vite打包警告过多问题&quot;">​</a></h1><p>对于会报错的警告可以直接定位到工程进行修复，但是有时会出现明明项目运行不会有问题，但是却会出现很多警告扰乱控制台显示： 以下警告主要是一些规范问题 如果没有遵守可能在项目启动和打包的时候动则几十条警告，甚至几百条，严重影响对于开发人员对有用信息的定位和判断所以需要解决：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">1.</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">warning</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@charset</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> must be the first rule </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> the file</span></span>
<span class="line"><span style="color:#F78C6C;">2.</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">warning</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Unexpected </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F78C6C;">3.</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">table</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;">deep</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">table__body</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">wrapper </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">the</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;&gt;&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">and</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">deep</span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">combinators</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">have</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">been</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">deprecated</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Use</span><span style="color:#F07178;"> :</span><span style="color:#82AAFF;">deep</span><span style="color:#F07178;">() </span><span style="color:#A6ACCD;">instead</span><span style="color:#89DDFF;">.</span></span></code></pre></div><p>第一种是提示@charset必须在文件夹的样式第一行使用，这个警告一但出现就是几十条起步的。这个一般是vite版本对于stylus，scss预处理语言和element使用时的兼容性问题，原因，sass编译的时候，因为被编译的文件里有中文导致的，比如element的样式文件。但是在less和element一起使用的时候不会出现以下问题。网上说在vite.config.js 内设置css的charset: false，但是发现没用所以采用以下配置：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">css</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">postcss</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#FFCB6B;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                postcssPlugin</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">internal:charset-removal</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">                AtRule</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                       </span><span style="color:#82AAFF;">charset</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">atRule</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                              </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">atRule</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">charset</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                                      </span><span style="color:#A6ACCD;">atRule</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">                              </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">                      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>第二第三条主要是深度选择器的样式规范问题，我总结有以下几点：</p><ol><li>不使用 /deep/和 &gt;&gt;&gt;,因为已经淘汰</li><li>::v-deep() 是element推荐的选择器，测试发现其可以有效的降低打包以后的文件大小，网上说可以提高运行速度还没有证实，经过测试：</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">使用规范</span></span>
<span class="line"><span style="color:#A6ACCD;">::v</span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;">deep</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">table)        正确        功能生效</span></span>
<span class="line"><span style="color:#A6ACCD;">::v</span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;">deep</span><span style="color:#A6ACCD;">()  </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">table      控制台警告   功能生效</span></span>
<span class="line"><span style="color:#FFCB6B;">但是还是推荐使用</span><span style="color:#89DDFF;">:</span><span style="color:#82AAFF;">deep</span><span style="color:#A6ACCD;">() </span></span>
<span class="line"><span style="color:#A6ACCD;">使用规范</span></span>
<span class="line"><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">deep</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">table)          正确         功能生效</span></span>
<span class="line"><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">deep</span><span style="color:#A6ACCD;"> ()  </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">table        控制台警告    功能生效</span></span></code></pre></div><p>-------------------------10月17号更新--------------------------------</p><h1 id="_5-关于nodejs打包报错问题" tabindex="-1">5.关于NodeJs打包报错问题 <a class="header-anchor" href="#_5-关于nodejs打包报错问题" aria-label="Permalink to &quot;5.关于NodeJs打包报错问题&quot;">​</a></h1><p>最近项目CI打包出现了很多NodeJs类型无法获取的问题，但是其实项目中已经安装了，且在本地打包没有问题，是由于TypeScript版本跟新以后出现的问题</p><p><img src="https://img-blog.csdnimg.cn/83cc6f1124d74a5ebab72ba178fb5832.png" alt="在这里插入图片描述"></p><p>为了解决此问题我们需要配置tsconfig.ts让其载入node相关类型，在types中加入node</p><p><img src="https://img-blog.csdnimg.cn/515b3b485cad46aaa5f6a17bea0c8004.png" alt="在这里插入图片描述"></p><p>并且将@types/node升级到较新版本，我这边暂时升级到了18.8.0的版本，现在比较稳定，最终再次提交线上ci打包完美通过了。以下附上我的TS版本</p><p><img src="https://img-blog.csdnimg.cn/0aaffd3c37b04c7cb05fc563b72b552e.png" alt="在这里插入图片描述"></p><h1 id="_6-volar相关问题" tabindex="-1">6.Volar相关问题 <a class="header-anchor" href="#_6-volar相关问题" aria-label="Permalink to &quot;6.Volar相关问题&quot;">​</a></h1><p>随着不久前Volar的1.0版本发布（vscode vue3插件），其将不在内置pug的类型解析功能，意味着你script内书写的变量暴露给模版后，其不会解析到相应的TS类型，你的变量如果只有在模版内使用会显示变量定义但是未被使用，这对于开发来说是看起来很不舒服的事情，且无法使用TS的优势所在</p><p>但是庆幸的是只需要在项目中安装以下插件就可以完美解决此问题，并且在tsconfig内配置</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">@volar/vue-language-plugin-pug</span></span></code></pre></div><p>tsconfig配置</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">..........</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vueCompilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@volar/vue-language-plugin-pug</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">        ]</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>另外vue-tsc也需要升级到对应一致的版本，更好的兼容volar插件</p><p>比如：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue-tsc</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^1.0.9</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@volar/vue-language-plugin-pug</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^1.0.9</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span></code></pre></div><h1 id="_7-动态引入图片问题" tabindex="-1">7.动态引入图片问题 <a class="header-anchor" href="#_7-动态引入图片问题" aria-label="Permalink to &quot;7.动态引入图片问题&quot;">​</a></h1><p>在原来我们使用vue2时是使用require动态获取到对应路径下的img图片以及资源等等，但是在vue3这变得比较困难，i<wbr>mport.meta.globaEager以及await import属性引入都有些繁琐，当然也可以使用引入外部包来解决，但是下面推荐一种比较方便的方法：使用new URL语句</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URL</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">../assets/images/test.png</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">meta</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">url)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">href</span></span></code></pre></div><p>我们可以将他封装成公共方法</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> getAssetsFile </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">   </span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">URL</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">../assets/images/</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">charAt</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;">  url</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">  url</span><span style="color:#89DDFF;">}\`</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">meta</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">url</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">href</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 防止多写的&#39;/&#39;在线上ci环境打包获取不到资源</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>这样我们就可以方便的使用此方法来获取图片及相关资源了如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> :src=&quot;getAssetsFile(\`fiveWater/trophy-\${index + 1}.png\`)&quot; </span><span style="color:#C792EA;">alt</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">图片加载失败</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h1 id="作者" tabindex="-1">作者 <a class="header-anchor" href="#作者" aria-label="Permalink to &quot;作者&quot;">​</a></h1>`,68);function r(D,y,F,i,C,A){const s=n("ContributorView");return l(),p("div",null,[c,o(s,{name:"马佳辉"})])}const g=a(t,[["render",r]]);export{u as __pageData,g as default};
